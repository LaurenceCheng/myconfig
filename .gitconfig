[core]
	autocrlf = true
	editor = vim
[alias]
	lg = log -10 --graph --pretty=format:\"%Cgreen%h %Cred%d%n %ad - %an - %C(yellow)%s\"
	ss = status
	co = checkout
	cob = checkout -b
	sta = stash
	cm = commit
	cmm = commit -m
	rb = rebase
	rbi = rebase -i
	rbc = rebase --continue
	alias = config --global --get-regexp alias
	updateSubmodule = submodule foreach --recursive git submodule update
	st = stash
	diffc = diff --cached
	s = status
	sn = show --name-only
	p = pull
	br = branch -vv
	d = diff
	dc = diff --cached
	a = add
	cm-am-ne = commit --amend --no-edit
        cmcr = "!f() { jira_case=$(git branch | sed -n -e 's/^\\* .*\\/\\([a-zA-Z0-9]*-[0-9]*\\).*/\\1/p');git commit -m \"$jira_case Code review (To Be Squashed)\"; }; f"
        tmcm = "!f() { jira_case=$(git branch | sed -n -e 's/^\\* .*\\/\\([a-zA-Z0-9]*-[0-9]*\\).*/\\1/p');commit_msg=$(echo \"$jira_case $1\" | sed -e 's/^[[:space:]]*//');git commit -m \"$commit_msg\"; }; f"
	add-symlink = "!__git_add_symlink() {\n  if [ $# -ne 2 ] || [ \"$1\" = \"-h\" ]; then\n    printf '%b\\n'         'usage: git add-symlink <source_file_or_dir> <target_symlink>\\n'         'Create a symlink in a git repository on a Windows host.\\n'         'Note: source MUST be a path relative to the location of target'\n    [ \"$1\" = \"-h\" ] && return 0 || return 2\n  fi\n\n  source_file_or_dir=${1#./}\n  source_file_or_dir=${source_file_or_dir%/}\n\n  target_symlink=${2#./}\n  target_symlink=${target_symlink%/}\n  target_symlink=\"${GIT_PREFIX}${target_symlink}\"\n  target_symlink=${target_symlink%/.}\n  : \"${target_symlink:=.}\"\n\n  if [ -d \"$target_symlink\" ]; then\n    target_symlink=\"${target_symlink%/}/${source_file_or_dir##*/}\"\n  fi\n\n  case \"$target_symlink\" in\n    (*/*) target_dir=${target_symlink%/*} ;;\n    (*) target_dir=$GIT_PREFIX ;;\n  esac\n\n  target_dir=$(cd \"$target_dir\" && pwd)\n\n  if [ ! -e \"${target_dir}/${source_file_or_dir}\" ]; then\n    printf 'error: git-add-symlink: %s: No such file or directory\\n'         \"${target_dir}/${source_file_or_dir}\" >&2\n    printf '(Source MUST be a path relative to the location of target!)\\n' >&2\n    return 2\n  fi\n\n  git update-index --add --cacheinfo 120000       \"$(printf '%s' \"$source_file_or_dir\" | git hash-object -w --stdin)\"       \"${target_symlink}\"     && git checkout -- \"$target_symlink\"     && printf '%s -> %s\\n' \"${target_symlink#$GIT_PREFIX}\" \"$source_file_or_dir\"     || return $?\n}\n__git_add_symlink"
[push]
	default = current
